// Collapse top margin
@mixin collapse-top {
  > *:first-child,
  > *:first-child > *:first-child,
  > *:first-child > *:first-child > *:first-child {
    margin-top: 0;
  }
}

// Collapse bottom margin
@mixin collapse-bottom {
  > *:last-child,
  > *:last-child > *:last-child,
  > *:last-child > *:last-child > *:last-child {
    margin-bottom: 0;
  }
}

// Until width media query mixin
@mixin until($width) {
  $width: $width - 1;
  @media all and (max-width: $width) {
    @content;
  }
}

// At least width media query mixin
@mixin at-least($width) {
  @media all and (min-width: $width) {
    @content;
  }
}

// Between widths media query mixin
@mixin between($small-width, $large-width) {
  $large-width: $large-width - 1;
  @media (max-width: $large-width) and (min-width: $small-width) {
    @content;
  }
}

@mixin block-margin ($margin: $vertical-margin) {
  margin-top: $margin;
  margin-bottom: $margin;
}

// Modules with max-width and padding
@mixin padded-module($width: 1100px, $padding: null, $nested: true) {
  padding-left: calc(50vw - #{$width / 2});
  padding-right: calc(50vw - #{$width / 2});

  @if $nested {
    width: 100vw;
  }

  @if $padding {
    @media (max-width: $width + $padding * 2) {
      padding-left: $padding;
      padding-right: $padding;
    }
  }
}

// Center an element to the viewport regardless of nesting
@mixin center-to-viewport {
  margin-left: calc(-50vw + 50%);
  transform: translateX(calc(50vw - 50%));
}


// Smooth fonts are smooth
@mixin font-smoothing($value: on) {
  @if $value == on {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

// Inline links
@mixin inline-link($default: $blue-03, $hover: $blue-04) {
  text-decoration: underline;
  text-decoration-color: rgba($default, .5);
  transition: color $duration;

  // Default state
  color: $default;

  // Active state
  @include active {
    color: $hover;
  }
}

/* ===================================== *
 * Animations
 * ------------------------------------- */

 // Transition duration
$duration: .25s;
$timing: cubic-bezier(0.4, 0.0, 0.2, 1);
